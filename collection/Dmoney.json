{
	"info": {
		"_postman_id": "5b24bc18-493d-489c-8d05-f6c69e880cf3",
		"name": "Dmoney with postman and newman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24973005",
		"_collection_link": "https://planetary-firefly-144922.postman.co/workspace/d48821af-ba4d-43f3-96cd-359ecdb27960/collection/24973005-5b24bc18-493d-489c-8d05-f6c69e880cf3?action=share&creator=24973005&source=collection_link"
	},
	"item": [
		{
			"name": "login",
			"item": [
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\",jsonData.token)\r",
									"\r",
									"\r",
									"pm.test(\"login is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    console.log(message)\r",
									"    pm.expect(message).contains('Login successfully')\r",
									"\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\" :\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User inputs wrong email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"login unsuccessful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    console.log(message)\r",
									"    pm.expect(message).contains('User not found')\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@grr\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User inputs wrong password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Wrong Password\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    console.log(message)\r",
									"    pm.expect(message).contains('Password incorrect')\r",
									"});\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Adnin creates agent and two customer",
			"item": [
				{
					"name": "Admin Creates an agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Agent Create by Admin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User created\");\r",
									"\r",
									"});\r",
									" var jsonData = pm.response.json();\r",
									" pm.collectionVariables.set(\"phone_number\",jsonData.user.phone_number)\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var prefix = \"0152\"\r",
									"\r",
									"\r",
									"var randomNumber = _.random(1000000,9999999)\r",
									"var phone_number = prefix+ randomNumber;\r",
									"\r",
									"pm.collectionVariables.set(\"phone_number\", phone_number)\r",
									"\r",
									"console.log (phone_number)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"0011224457\",\r\n    \"phone_number\":\"{{phone_number}}\",\r\n    \"nid\":\"{{phone_number}}\",\r\n    \"role\":\"Agent\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin creates duplicate agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Duplicate agent\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User already exists\")\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Oscar Spencer\",\r\n    \"email\": \"Peggie94@hotmail.com\",\r\n    \"password\": \"0011224457\",\r\n    \"phone_number\": \"01521181753\",\r\n    \"nid\": \"2017149\",\r\n    \"role\": \"Agent\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Creates an customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var prefix = \"0170\"\r",
									"var randomNumber = _.random(1000000,9999999)\r",
									"var customer_phone_number = prefix+ randomNumber;\r",
									"\r",
									"pm.collectionVariables.set(\"customer_phone_number\",customer_phone_number)\r",
									"console.log (customer_phone_number)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Admin Creates a customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User created\")\r",
									"    \r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"customer_phone_number\", jsonData.user.phone_number);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{customer_phone_number}}\",\r\n    \"nid\":\"2017149\",\r\n    \"role\":\"Customer\"\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Creates a Duplicate customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Admin Creates a Duplicate customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User already exists\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"name\": \"Mike Gislason\",\r\n    \"email\": \"Odell.Oberbrunner@hotmail.com\",\r\n    \"password\": \"0011224457\",\r\n    \"phone_number\": \"01526139646\",\r\n    \"nid\": \"2017149\",\r\n    \"role\": \"Customer\"\r\n }\r\n\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Creates an customer Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var prefix = \"0170\"\r",
									"var randomNumber = _.random(1000000,9999999)\r",
									"var customer_phone_number = prefix+ randomNumber;\r",
									"\r",
									"pm.collectionVariables.set(\"customer_phone_number\",customer_phone_number)\r",
									"console.log (customer_phone_number)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Admin Creates a customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User created\")\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"0011224457\",\r\n    \"phone_number\":\"{{customer_phone_number}}\",\r\n    \"nid\":\"2017149\",\r\n    \"role\":\"Customer\"\r\n    \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deposit money to agent from system",
			"item": [
				{
					"name": "Deposit to Agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deposit to Agent Successfuly\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Deposit successful\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{phone_number}}\",\r\n    \"amount\":1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit can not be possible for invalid agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid agent\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01521234552\",\r\n    \"amount\":1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Agent deposit to customer",
			"item": [
				{
					"name": "Agent deposit to Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Agent deposit to one customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Deposit successful\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{phone_number}}\",\r\n    \"to_account\":\"{{customer_phone_number}}\",\r\n    \"amount\":200\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agent have insufficient balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Agent have insufficient balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Insufficient balance\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01524562724\",\r\n    \"to_account\":\"01503805239\",\r\n    \"amount\":20000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Only Agent can deposit to Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Agent deposit to one customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Only Agent can deposit money\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01706262821\",\r\n    \"to_account\":\"01503805239\",\r\n    \"amount\":200\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Moeny withdraw by customer",
			"item": [
				{
					"name": "Money withdraw by Customer from agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Money withdraw by customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Withdraw successful\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_phone_number}}\",\r\n    \"to_account\":\"{{phone_number}}\",\r\n    \"amount\":10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Money withdraw by Customer without providing amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Money withdraw by Customer without providing amount\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Minimum withdraw amount 10 tk\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_phone_number}}\",\r\n    \"to_account\":\"{{phone_number}}\",\r\n    \"amount\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Checking Agent Balance",
			"item": [
				{
					"name": "Check agent balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Checking the balance of an agent\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{phone_number}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{phone_number}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Invalid agent balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Invalid agent\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User not found\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/0170815070911",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"0170815070911"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Check customer balance",
			"item": [
				{
					"name": "Check customer balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Checking customers balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{phone_number}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{phone_number}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check invalid customers balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check invalid customers balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/01300123453",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"01300123453"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "send money by customer",
			"item": [
				{
					"name": "Send money by newly created customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Send money to newly customer phone number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_phone_number}}\",\r\n    \"to_account\":\"01706262821\",\r\n    \"amount\":20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/sendmoney",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send money to invalid customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Send money to invalid customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_phone_number}}\",\r\n    \"to_account\":\"01706262820\",\r\n    \"amount\":20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/sendmoney",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment by customer",
			"item": [
				{
					"name": "Payment by customer to merchant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Payment to merchant\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Payment successful\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01706262821\",\r\n    \"to_account\":\"01686606905\",\r\n    \"amount\":10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment by customer to invalid merchant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Payment by customer to invalid merchant\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"From A/C should be customer or agent and To A/C should be merchant type\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"01706262821\",\r\n    \"to_account\":\"01686606901\",\r\n    \"amount\":10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"payment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Check customer balance and statement",
			"item": [
				{
					"name": "Check customer balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check customers balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/01706262821",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"01706262821"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check customer statement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check customer statement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/statement/01706262821",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"statement",
								"01706262821"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Check merchant balance after payment",
			"item": [
				{
					"name": "Check merchant balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check merchant balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
									"    pm.expect(jsonData.value).to.eql();\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/01686606905",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"01686606905"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check invalid merchant balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check invalid merchant balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User not found\");\r",
									"    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/01686606900",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"01686606900"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQHJvYWR0b2NhcmVlci5uZXQiLCJwYXNzd29yZCI6IjEyMzQiLCJpYXQiOjE2ODYyMzQwODcsImV4cCI6MTY4NjIzNTg4N30.MUVBQr6DRc3G1Uc0uNfsavpaYIERKRg-vEFF9rJtOuI"
		},
		{
			"key": "baseUrl",
			"value": "http://dmoney.roadtocareer.net"
		},
		{
			"key": "phone_number",
			"value": ""
		},
		{
			"key": "customer_phone_number",
			"value": ""
		},
		{
			"key": "agent_phone_number",
			"value": ""
		}
	]
}